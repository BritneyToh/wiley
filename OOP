## Object Oriented Programming
- Objects: Data structures containing data
  - Attributes/Properties: Data
  - Functions/Methods: Access/modify data attributes of object
  - E.G. Hotel room = Object, Room number/type = Properties
  
- Class: Blueprint to build an object
  - Creating classes: __init__(variable 1, variable 2...)
    class People():
      def __init__(self,name,nickname,age,gender)
        self.name=name
        self.nickname=nickname
        self.age=age
        self.gender=gender
        
      def greet(self):
        print("Greetings,"+ self.name)
        
      def __str__(self):
        return f"Object: {self.name},{self.age} years old"
        
    personx=People("Britney Toh","",23,"F")
    print(personx)
    print(personx.gender)
    print(personx.greet())
    
- Inheritance: Inherit all methods and properties from another class, add even more methods and properties in new class
  class People():
      def __init__(self,name,nickname,age,gender)
        self.name=name
        self.nickname=nickname
        self.age=age
        self.gender=gender
        
  class Employee(People):
    def __init__(self,name,nickname,age,gender,department,msalary,status)
      super().__init__(name,nickname,age,gender)
      self.department=department
      self.msalary=salary
      self.status=status
      
    def __str__(self):
      return f"Name:{name}\n Age:{age}\n Gender:{gender}\n Department:{department}\n Monthly pay:{msalary}\n Status:{status}"
      
    instance1=Employee("James","",26,"M","IT",7500,"active")
    print(instance1) to get __str__(self) output
    
