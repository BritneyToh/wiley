## Basic Data Structures
## Activity 1
def userdata():
    userlist=[]
    name=input("What is your name? ")
    age=int(input("What is your age? "))
    birthday=input("When is your birthday? ")
    userlist.append(name)
    userlist.append(age)
    userlist.append(birthday)

    return userlist

userdata()

## Activity 2
def userdata():
    userlist=[]
    name=input("What is your name? ")
    age=int(input("What is your age? "))
    birthday=input("When is your birthday? ")
    
    address=input("What is your address? ")
    gender=input("Are you male or female? ")
    userlist.append(name)
    userlist.append(age)
    userlist.append(birthday)
    userlist.append(address)
    userlist.append(gender)
    return userlist

userdata()

## Activity 3
def userdata():
    userlist=[]
    name=input("What is your name? ")
    age=int(input("What is your age? "))
    birthday=input("When is your birthday? ")
    
    address=input("What is your address? ")
    gender=input("Are you male or female? ")
    
    job=input("What are you working as? ")
    children=int(input("How many children do you have? "))
    
    userlist.append(name)
    userlist.append(age)
    userlist.append(birthday)
    userlist.append(address)
    userlist.append(gender)
    userlist.append(job)
    userlist.append(children)
    print(userlist)
    
    x=input("What is the item you want to remove from list? Choose from name,age,birthday,address,job and children. ")
    if x.lower()=="name":
        del userlist[0]
    elif x.lower()=="age":
        del userlist[1]
    elif x.lower()=="birthday":
        del userlist[2]
    elif x.lower()=="address":
        del userlist[3]
    elif x.lower()=="gender":
        del userlist[4]
    elif x.lower()=="job":
        del userlist[5]
    elif x.lower()=="children":
        del userlist[6]
    print(userlist)

userdata()

## Activity 4
def userdata():
    userlist=[]
    name=input("What is your name? ")
    age=int(input("What is your age? "))
    birthday=input("When is your birthday? ")
    
    address=input("What is your address? ")
    gender=input("Are you male or female? ")
    
    job=input("What are you working as? ")
    children=int(input("How many children do you have? "))
    
    userlist.append(name)
    userlist.append(age)
    userlist.append(birthday)
    userlist.append(address)
    userlist.append(gender)
    userlist.append(job)
    userlist.append(children)
    print(userlist)
    
    x=input("What is the item you want to update from list? Choose from name,age,birthday,address,job and children. ")
    if x.lower()=="name":
        updated_name=input("What is your new name? ")
        userlist[0]=updated_name
        print(userlist)
    elif x.lower()=="age":
        updated_age=input("What is your new age? ")
        userlist[1]=updated_age
        print(userlist)
    elif x.lower()=="birthday":
        updated_bd=input("What is your new birthday? ")
        userlist[2]=updated_bd
        print(userlist)
    elif x.lower()=="address":
        updated_ad=input("What is your new address? ")
        userlist[3]=updated_ad
        print(userlist)
    elif x.lower()=="gender":
        updated_gender=input("What is your new gender? ")
        userlist[4]=updated_gender
        print(userlist)
    elif x.lower()=="job":
        updated_job=input("What is your new job? ")
        userlist[5]=updated_job
        print(userlist)
    elif x.lower()=="children":
        updated_cd=input("What is your new number of children? ")
        userlist[6]=updated_cd
        print(userlist)
    

userdata()

## Activity 5
def userdata():
    firstname=input("What is your first name? ")
    lastname=input("What is your last name? ")
    nametuple=(firstname,lastname)
    job=input("What is your current profession? ")
    jobtuple=(job,)
    address=input("What is your current address? ")
    addresstuple=(address,)
    prevaddress=input("What was your previous address? ")
    prevaddresstuple=(prevaddress,)
    print(nametuple)
    print(jobtuple)
    print(addresstuple)
    print(prevaddresstuple)
    usertuple=(nametuple+jobtuple+addresstuple+prevaddresstuple)
    print(usertuple)

userdata()

## Activity 6
def userdata():
    firstname=input("What is your first name? ")
    lastname=input("What is your last name? ")
    nametuple=(firstname,lastname)
    job=input("What is your current profession? ")
    jobtuple=(job,)
    address=input("What is your current address? ")
    addresstuple=(address,)
    prevaddress=input("What was your previous address? ")
    prevaddresstuple=(prevaddress,)
    
    usertuple=(nametuple+jobtuple+addresstuple+prevaddresstuple)
    print(usertuple)
    
    x=input("Do you want to change your first name, last name, job, current address or previous address?")
    if x.lower()=="first name":
        updated_fn=input("What is your new first name? ")
        l=list(nametuple)
        l[0]=updated_fn
        usertuple=(tuple(l)+jobtuple+addresstuple+prevaddresstuple)
        print(usertuple)
        
    elif x.lower()=="last name":
        updated_ln=input("What is your new last name? ")
        l=list(nametuple)
        l[l]=updated_ln
        usertuple=(tuple(l)+jobtuple+addresstuple+prevaddresstuple)
        print(usertuple)
        
    elif x.lower()=="job":
        updated_job=input("What is your new job? ")
        l=list(jobtuple)
        l[0]=updated_job
        usertuple=(nametuple+tuple(l)+addresstuple+prevaddresstuple)
        print(usertuple)
        
    elif x.lower()=="current address":
        updated_ca=input("What is your new current address? ")
        l=list(addresstuple)
        l[0]=updated_ca
        usertuple=(nametuple+jobtuple+tuple(l)+prevaddresstuple)
        print(usertuple)
        
    elif x.lower()=="previous address":
        updated_pa=input("What is your new previous address? ")
        l=list(prevaddresstuple)
        l[0]=updated_pa
        usertuple=(nametuple+jobtuple+addresstuple+tuple(l))
        print(usertuple)

userdata()

## Self Assessment: Manipulating Collections
x=(4,1,2,3,5,7,9,0,-1,3,6,7)
l=list(x)

l1=l[:4]
l2=l[4:8]
l3=l[8:12]

print(l1[::-1])
print(l2[::-1])
print(l3[::-1])

## Loops
## Activity 1
fruit_list = ["apple", "banana", "cherry", "gooseberry",
"kumquat", "orange", "pineapple"]

for item in fruit_list:
    print(item)
    
## Activity 2
x=input("Key in a word: ")

for letter in x:
    print(letter)
    
## Activity 3
x=input("Key in a word: ")
i=0

for letter in x:
    i+=1
print(i)

## Activity 4
a = ["a", "bc", "rye", "hello", "c", ""]
result=list(filter(lambda x: (len(x)>2),a))
print(result)

## Activity 5
# Script 1
x=[]
for num in range(100,1001):
    if num%50==0:
        x.append(num)
print(x)

# Script 2
x=100
y=[]

while x<1001:
    x=x+1
    if x%50==0:
        print(x)     
        
## Activity 6
i=0
for num in range(0,101):
    i+=num
print(i)

## Activity 7
factoriallist=[]
x=int(input("Key in a number: "))

for num in range(1,x+1):
    if x%num==0:
        factoriallist.append(num)
        
print(factoriallist)

## Activity 8
fruit_list = ["apple", "banana", "cherry", "gooseberry",
"kumquat", "orange", "pineapple"]

continuer=True

while continuer:
    fruit_user=input("Key in the name of a fruit: ")
    for elements in fruit_list:
        if fruit_user.lower() in fruit_list:
            print(f"The fruit you chose is in the list, at index {fruit_list.index(fruit_user.lower())} ")
            continuer=False
            break
            
        else:
            print("The fruit you chose is not in the list. Try again. ")
            break
            
## Activity 9
count=0
total=0

while True:
        numlist = input('Enter number\n')
        if numlist.lower() == 'quit':
                break
        try:
                count = count + 1
                total = total + float(numlist)
        except:
                count = count - 1
                print('Enter a valid number')
                continue
                
print('Count:',count)
print('Total:',total)

## Activity 10
x=int(input("Key in an integer value: "))
total=1

for num in range(1,x**2):
    print(x*num)
    
## Activity 11
Number = 1

while(Number <= 100):
    count = 0
    i = 2
    
    while(i <= Number//2):
        if(Number % i == 0):
            count = count + 1
            break
        i = i + 1

    if (count == 0 and Number != 1):
        print(" %d" %Number, end = '  ')
    Number = Number  + 1
    
 ## Activity 12
 def gcd(x, y):

    if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            gcd = i 
    return gcd

x = int(input("Enter an integer: ")) 
y = int(input("Enter another integer: "))

print("The GCD is", gcd(x, y))

## Activity 13
number=int(input("Enter any Number"))
print("Digit\tFrequency")
for i in range(0,10):
    count=0;
    temp=number;
    while temp>0:
        digit=temp%10
        if digit==i:
            count=count+1
        temp=temp//10;
    if count>0:
        print(i,"\t",count)
        
## Activity 14
def lcm(x, y):

    if x > y:
        greater = x
    else:
        greater = y
    
    while True:
        if((greater % x == 0) and (greater % y == 0)):
            lcm = greater
            break
        greater += 1

    return lcm 

x = int(input("Enter an integer: ")) 
y = int(input("Enter another integer: "))

print("The LCM is", lcm(x, y))

## Activity 15
Number = int(input('Enter the Number : '))
arr = []
for i in range(2, Number):
    flag = 0
    for j in range(2, i):
        if i % j == 0:
            flag = 1
    if flag == 0:
        arr.append(i)
flag = 0
for i in range(len(arr)):
    for j in range(i + 1, len(arr)):
        if arr[i] + arr[j] == Number:
            flag = 1
            print(str(arr[i]) + " and " + str(arr[j]) + ' are prime numbers when added gives ' + str(Number))
            break
if flag == 0:
    print('No Prime numbers can give sum of ' + str(Number))
    
## Self-assessment: FizzBuzz
x=int(input("Key in an integer value: "))


def fizzbuzz(x):
    for num in range(0,x+1):
        if num%3==0 and num%5!=0:
            print("fizz")
            continue
        elif num%3!=0 and num%5==0:
            print("buzz")
            continue
        elif num%3==0 and num%5==0:
            print("fizzbuzz")
            continue
        elif num==x:
            print("TRADITION!")
        else:
            print(num)
            
    
fizzbuzz(x)

## Dictionaries and sets
## Activity 1
test = {"hello":4,"world":4,"I":1,"am":2,"Martha":3}

sum=0
for i in test.values():
    sum+=i
    
print(sum)

## Activity 2
test = {"hello":4,"world":4,"I":1,"am":2,"Martha":3}

l=[]

for i in test.values():
    l.append(i)
    
print(f"Minimum value: {min(l)}")
print(f"Maximum value: {max(l)}")

## Activity 3
x=(1,2,3,4,5)
sum=0

for item in x:
    sum+=item
    
print(sum)

## Activity 4
x=(1,2,3,4,5)

print(f"Minimum value: {min(x)}")
print(f"Maximum value: {max(x)}")

## Activity 5
storage = {
    "cupboard" : ["spices", "flour", "sugar"],
    "drawer" : ["fork", "knife", "spoon"],
    "fridge" : ["butter", "milk", "cheese"],
    "emergency jar" : 150
}

storage["freezer"]=["ice cubes","ice cream","pepporoni pizza"]

print(sorted(storage["cupboard"]))
print()

storage["fridge"].append("cream")

storage["cupboard"].remove("sugar")

storage["emergency jar"]=125

print(storage)

## Activity 6
shopping_list = {
    "milk" : 4,
    "butter" : 2,
    "crackers" : 1.5,
    "rice" : 2.25,
    "spaghetti" : 1.75,
    "dish soap": 3.25
}

for key,value in shopping_list.items():
    print(f"{key} \n price: {value}")
    
total_cost=0
for value in shopping_list.values():
    total_cost+=value
print()
print(f"The total cost is: ${total_cost}")

## Activity 7
price = {
    "milk" : 4,
    "butter" : 2,
    "crackers" : 1.5,
    "rice" : 2.25,
    "spaghetti" : 1.75,
    "dish soap": 3.25
}

quantity = {
    "milk" : 1,
    "butter" : 1,
    "crackers" : 3,
    "rice" : 2,
    "spaghetti" : 5,
    "dish soap": 1
}

result = {key: price[key] * quantity[key] for key in price}
print(result)

total_cost=0
for value in result.values():
    total_cost+=value
print()
print(f"The total cost is: ${total_cost}")

## Self-Assessment: Dictionaries and sets
fruit_set = {"apple", "banana", "cherry", "gooseberry",
"kumquat", "orange", "pineapple"}
fruit_list = list(fruit_set)

continuer=True

while continuer:
    fruit_user=input("Key in the name of a fruit: ")
    user_input=input("Would you like to add or remove the fruit? Key in quit to exit. ")

    if user_input.lower()=="add":
        if fruit_user.lower() in fruit_list:
            print(f"The fruit you chose is in the list, at index {fruit_list.index(fruit_user.lower())} ")
            print(fruit_list)
            
            
        elif fruit_user.lower() not in fruit_list:
            fruit_list.append(fruit_user.lower())
            print(fruit_list)
            
    elif user_input.lower()=="remove":
        if fruit_user.lower() in fruit_list:
            fruit_list.remove(fruit_user.lower())
            print(fruit_list)
            
        else:
            print("Sorry, fruit is not in the set! ")
            print(fruit_list)
            
    elif user_input.lower()=="quit":
        print(fruit_list)
        continuer=False
        break
            
## Text count analysis assignment
## Step 1
s = ("""Imagine a vast sheet of paper on which straight Lines, Triangles, Squares, Pentagons, Hexagons, and other figures, instead of remaining fixed in their places, move freely about, on or in the surface, but without the power of rising above or sinking below it, very much like shadows - only hard and with luminous edges - and you will then have a pretty correct notion of my country and countrymen. Alas, a few years ago, I should have said "my universe": but now my mind has been opened to higher views of things.""")

s_lower=s.lower()
print(s_lower)

## Step 2
words=s_lower.split()
w=s_lower.split()
words=[]
for item in w:
    words.append(item)
    
print(words)

## Step 3
print(len(words))

## Step 4
print(len(set(words)))

## Step 5
w = ["haythem","is","eating","tacos.","haythem","loves","tacos","",":"]
freq_occur={}
word_freq={}

for item in w:
    freq_occur[item]=w.count(item)
    
print(freq_occur)
print()

for item in words:
    word_freq[item]=words.count(item)
    
print(word_freq)

## Step 6
import string
punctuation_list =  list(string.punctuation)
print(punctuation_list)
print()
print(words)
w_clean=[]
no_punc=""
for item in words:
    new_item=''.join((char for char in item if char not in string.punctuation))
    w_clean.append(new_item)
    
print(w_clean)

for item in w_clean:
    freq_occur[item]=w_clean.count(item)
    
print(freq_occur)
print()

for item in w_clean:
    word_freq[item]=w_clean.count(item)
    
print(word_freq) 

## Activity 7
s = ("""Imagine a vast sheet of paper on which straight Lines, Triangles, Squares, Pentagons, Hexagons, and other figures, instead of remaining fixed in their places, move freely about, on or in the surface, but without the power of rising above or sinking below it, very much like shadows - only hard and with luminous edges - and you will then have a pretty correct notion of my country and countrymen. Alas, a few years ago, I should have said "my universe": but now my mind has been opened to higher views of things.""")
s_lower=s.lower()

w=s_lower.split()
words=[]
for item in w:
    words.append(item)

words=list(set(words))
print(words)

import string
punctuation_list =  list(string.punctuation)
print(punctuation_list)
print()
print(words)
w_clean=[]
no_punc=""
for item in words:
    new_item=''.join((char for char in item if char not in string.punctuation))
    w_clean.append(new_item)
    
print()
print(w_clean)

for item in w_clean:
    freq_occur[item]=w_clean.count(item)

print()
print(freq_occur)
print()

for item in w_clean:
    word_freq[item]=w_clean.count(item)
    
print(word_freq) 
